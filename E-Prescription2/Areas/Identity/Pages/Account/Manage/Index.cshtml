@page
@using E_Prescription2.Models
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
    List<Province> province = (List<Province>)ViewData["Provinces"];
    List<City> cities = (List<City>)ViewData["Cities"];
    List<Suburb> suburbs = (List<Suburb>)ViewData["Suburbs"];
    List<PostalCode> postalCodes = (List<PostalCode>)ViewData["PostalCodes"];
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />

<form id="profile-form" method="post" enctype="multipart/form-data">
<div class="row">
    <div class="col-md-6">
       
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-floating">
                 <input asp-for="Input.FirstName" class="form-control" />
                <label asp-for="Input.FirstName"></label>
                   <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                </div>
                <div class="form-floating">
                
                <input asp-for="Input.LastName" class="form-control" />
                <label asp-for="Input.LastName"></label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
                </div>
                <div class="form-floating">
                <input asp-for="Input.IdNumber" class="form-control" autocomplete="username" aria-required="true" />
                <label asp-for="Input.IdNumber"></label>
                </div>
                 <div class="col-md-8">
             <label asp-for="Input.Genders" class="form-control" autocomplete="GenderId" aria-required="true">
                 
                 <select asp-for="SelectedGenderId" asp-items="@Model.GenderItem" class="form-select" aria-label="Default select example" >
                 <option>-- select your gender --</option>
                  
             </select>
             </label>
             </div>
              
                  <span asp-validation-for="Input.DOB" class="text-danger"></span>
                 <div class="form-floating">
                
                <input asp-for="Input.DOB" class="form-control" autocomplete="dateofbirth" aria-required="true" />
                <label asp-for="Input.DOB"></label>
                </div>
             
              <span asp-validation-for="Input.AddressLine1" class="text-danger"></span>
            <div class="form-floating">
                <input asp-for="Input.AddressLine1" class="form-control" autocomplete="addressline1" aria-required="true" />
               <label asp-for="Input.AddressLine1"></label>
               
             </div>
             <div class="form-floating">
                
                <input asp-for="Input.AddressLine2" class="form-control" autocomplete="addressline1" aria-required="true"/>
                <label asp-for="Input.AddressLine2"></label>
                
             </div>
              <div class="col-md-8">
             <label asp-for="Input.Province" class="form-control" autocomplete="provinceId" aria-required="true">
                  Province:
                    <select class="form-control" id="pageProvinceElement" asp-for="Input.ProvinceId">

                        @foreach (Province p in province)
                        {
                            <option value="@p.ProvinceId">@p.ProvinceName</option>
                        }
                    </select>
                  
             </select>
             </label>
             </div>
             <div class="col-md-8">
             <label asp-for="Input.City" class="form-control" autocomplete="cityId" aria-required="true">
                 City:
                    <select class="form-control" id="pageCityElement" asp-for="Input.CityId">

                        @foreach (City c in cities)
                        {
                            <option value="@c.CityId">@c.CityName</option>
                        }
                    </select>
             </label>
             </div>
             <div class="col-md-8">
                  <label asp-for="Input.Suburb" class="form-control" autocomplete="suburbId" aria-required="true">
                      Suburb:
                    <select class="form-control" id="pageSuburbElement" asp-for="Input.SuburbId">
                        @foreach (Suburb c in suburbs)
                        {
                            <option value="@c.SuburbId">@c.SuburbName</option>
                        }
                    </select>
                  </label> 
                  </div>
                   <div class="col-md-8">
                  <label asp-for="Input.PostalCode" class="form-control" autocomplete="postalcodeId" aria-required="true">
                       Postal Code:
                    <select class="form-control" id="pagePostalCodeElement" asp-for="Input.PostalCodeId">
                        @foreach (PostalCode c in postalCodes)
                        {
                            <option value="@c.PostalCodeId">@c.PostalCodeName</option>
                        }
                    </select>
                  </label>
                  </div>
            <div class="form-floating">
                <input asp-for="Username" class="form-control" disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating">
                <input asp-for="Input.PhoneNumber" class="form-control" />
                <label asp-for="Input.PhoneNumber" class="form-label"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        
    </div>
    <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.ProfilePicture" style="width: 100%;"></label>
                @if (Model.Input.ProfilePicture != null)
                {
                    <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(Model.Input.ProfilePicture))">
                }
                else
                {
                    <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="">
                }
                <input type="file"
                       accept=".png,.jpg,.jpeg,.gif,.tif"
                       asp-for="Input.ProfilePicture"
                       class="form-control"
                       style="border:0px!important;padding: 0px;padding-top: 10px;padding-bottom: 30px;"
                       onchange="document.getElementById('profilePicture').src = window.URL.createObjectURL(this.files[0])" />
                <span asp-validation-for="Input.ProfilePicture" class="text-danger"></span>
            </div>
        </div>
</div>
</form>

<script>

    var srlProvs = "@(ViewData["Prov_s"])";
    var srlCities = "@(ViewData["City_s"])";
    var srlSuburbs = "@(ViewData["Suburb_s"])";
    var srlPostalCodes = "@ViewData["PostalCode_s"]";

    var thisProvinces = document.getElementById('pageProvinceElement');
    var thisCities = document.getElementById('pageCityElement');
    var thisSuburbs = document.getElementById('pageSuburbElement');
    var thisPostalCodes = document.getElementById('pagePostalCodeElement');
    if (typeof srlProvs !== "undefined") {
        const allProvs = JSON.parse(srlProvs.replace(/&quot;/g, '"'));
        const allCities = JSON.parse(srlCities.replace(/&quot;/g, '"'));
        const allSuburbs = JSON.parse(srlSuburbs.replace(/&quot;/g, '"'));
        const allPostalCodes = JSON.parse(srlPostalCodes.replace(/&quot;/g, '"'));
        //thisCities.innerHTML = "";
        for (var i = 0; i < allCities.length; i++) {
            var obj = allCities[i];
            let selectedProvince = thisProvinces.options[thisProvinces.selectedIndex].value;
            if (selectedProvince == obj["ProvinceId"]) {
                let newOption = new Option(obj["CityName"], obj["CityId"]);
                thisCities.add(newOption, undefined);
            }
        }
        thisSuburbs.innerHTML = "";
        for (var i = 0; i < allSuburbs.length; i++) {
            var obj = allSuburbs[i];
            let selectedCity = thisCities.options[thisCities.selectedIndex].value;
            if (selectedCity == obj["CityId"]) {
                let newOption = new Option(obj["SuburbName"], obj["SuburbId"]);
                thisSuburbs.add(newOption, undefined);
            }
        }
        thisPostalCodes.innerHTML = "";
        for (var i = 0; i < allPostalCodes.length; i++) {
            var obj = allPostalCodes[i];
            let selectedSuburb = thisSuburbs.options[thisSuburbs.selectedIndex].value;
            if (selectedSuburb == obj["PostalCodeId"]) {
                let newOption = new Option(obj["PostalCodeName"], obj["PostalCodeId"]);
                thisPostalCodes.add(newOption, undefined);
            }
        }

        if (thisProvinces) {
            thisProvinces.addEventListener("change", function () {
                thisCities.innerHTML = "";
                for (var i = 0; i < allCities.length; i++) {
                    var obj = allCities[i];
                    let selectedProvince = thisProvinces.options[thisProvinces.selectedIndex].value;
                    if (selectedProvince == obj["ProvinceId"]) {
                        let newOption = new Option(obj["CityName"], obj["CityId"]);
                        thisCities.add(newOption, undefined);
                    }
                }
                thisSuburbs.innerHTML = "";
                for (var i = 0; i < allSuburbs.length; i++) {
                    var obj = allSuburbs[i];
                    let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                    if (selectedCity == obj["CityId"]) {
                        let newOption = new Option(obj["SuburbName"], obj["SuburbId"]);
                        thisSuburbs.add(newOption, undefined);
                    }
                }
                thisPostalCodes.innerHTML = "";
                for (var i = 0; i < allPostalCodes.length; i++) {
                    var obj = allPostalCodes[i];
                    let selectedSuburb = thisSuburbs.options[thisSuburbs.selectedIndex].value;
                    if (selectedSuburb == obj["PostalCodeId"]) {
                        let newOption = new Option(obj["PostalCodeName"], obj["PostalCodeId"]);
                        thisPostalCodes.add(newOption, undefined);
                    }
                }
            })
        }
        if (thisCities) {
            thisCities.addEventListener("change", function () {
                thisSuburbs.innerHTML = "";
                for (var i = 0; i < allSuburbs.length; i++) {
                    var obj = allSuburbs[i];
                    let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                    console.log(selectedCity);
                    if (selectedCity == obj["CityId"]) {
                        let newOption = new Option(obj["SuburbName"], obj["SuburbId"]);
                        thisSuburbs.add(newOption, undefined);
                    }
                }
                thisPostalCodes.innerHTML = "";
                for (var i = 0; i < allPostalCodes.length; i++) {
                    var obj = allPostalCodes[i];
                    let selectedSuburb = thisSuburbs.options[thisSuburbs.selectedIndex].value;
                    if (selectedSuburb == obj["PostalCodeId"]) {
                        let newOption = new Option(obj["PostalCodeName"], obj["PostalCodeId"]);
                        thisPostalCodes.add(newOption, undefined);
                    }
                }
            });
        }
        if (thisSuburbs) {
            thisSuburbs.addEventListener("change", function () {
                thisPostalCodes.innerHTML = "";
                for (var i = 0; i < allPostalCodes.length; i++) {
                    var obj = allPostalCodes[i];
                    let selectedSuburb = thisSuburbs.options[thisSuburbs.selectedIndex].value;
                    if (selectedSuburb == obj["PostalCodeId"]) {
                        let newOption = new Option(obj["PostalCodeName"], obj["PostalCodeId"]);
                        thisPostalCodes.add(newOption, undefined);
                    }
                }
            });
        }
    }
</script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
